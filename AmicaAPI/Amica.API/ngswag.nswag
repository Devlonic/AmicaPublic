{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"Amica API - v1\",\r\n    \"version\": \"v1\"\r\n  },\r\n  \"paths\": {\r\n    \"/api/Accounts/SignIn\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Accounts\"\r\n        ],\r\n        \"summary\": \"Transform (login and password) to (identity token)\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"Login\": {\r\n                    \"type\": \"string\",\r\n                    \"default\": \"defaultusername\"\r\n                  },\r\n                  \"Password\": {\r\n                    \"type\": \"string\",\r\n                    \"default\": \"KAKAkika1234\"\r\n                  }\r\n                }\r\n              },\r\n              \"encoding\": {\r\n                \"Login\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"Password\": {\r\n                  \"style\": \"form\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User successfully authenticated and token generated\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Authentication failed by user. Return SignUpResponce with explanation\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Authentication failed by server. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Accounts/SignUp\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Accounts\"\r\n        ],\r\n        \"summary\": \"Register new user (Create account and linked profile)\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"required\": [\r\n                  \"Email\",\r\n                  \"FullName\",\r\n                  \"Nickname\",\r\n                  \"Password\",\r\n                  \"ProfilePhoto\"\r\n                ],\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"Email\": {\r\n                    \"type\": \"string\",\r\n                    \"format\": \"email\",\r\n                    \"default\": \"mycoolemail@gmail.com\"\r\n                  },\r\n                  \"FullName\": {\r\n                    \"maxLength\": 50,\r\n                    \"minLength\": 3,\r\n                    \"type\": \"string\",\r\n                    \"default\": \"John Smith\"\r\n                  },\r\n                  \"Nickname\": {\r\n                    \"maxLength\": 30,\r\n                    \"minLength\": 8,\r\n                    \"type\": \"string\",\r\n                    \"default\": \"devloner\"\r\n                  },\r\n                  \"Password\": {\r\n                    \"type\": \"string\",\r\n                    \"default\": \"KAKAkika123\"\r\n                  },\r\n                  \"ProfilePhoto\": {\r\n                    \"type\": \"string\",\r\n                    \"format\": \"binary\"\r\n                  },\r\n                  \"CaptchaToken_v2\": {\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"CaptchaToken_v3\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"encoding\": {\r\n                \"Email\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"FullName\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"Nickname\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"Password\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"ProfilePhoto\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"CaptchaToken_v2\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"CaptchaToken_v3\": {\r\n                  \"style\": \"form\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"User successfully registered\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Missing captcha token. Return SignUpResponce with explanation\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Registration failed by user. Return SignUpResponce with explanation\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Registration failed by server. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Comments/Post/{post_id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Comments\"\r\n        ],\r\n        \"summary\": \"Get comments for post by post_id with pagination\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"Page\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Comments\"\r\n        ],\r\n        \"summary\": \"Add comment to post by post_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"CommentText\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"encoding\": {\r\n                \"CommentText\": {\r\n                  \"style\": \"form\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (post not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Comments/Post/{comment_id}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Comments\"\r\n        ],\r\n        \"summary\": \"Delete comment by comment_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (comment not found, user is not own this comment, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      },\r\n      \"patch\": {\r\n        \"tags\": [\r\n          \"Comments\"\r\n        ],\r\n        \"summary\": \"Update comment by comment_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"comment_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"NewCommentText\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"encoding\": {\r\n                \"NewCommentText\": {\r\n                  \"style\": \"form\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (comment not found, user is not own this comment, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Followers/{profile_id}/Follow\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Followers\"\r\n        ],\r\n        \"summary\": \"Follow by profile_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"profile_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (Already followed, profile not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Followers/{profile_id}/UnFollow\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Followers\"\r\n        ],\r\n        \"summary\": \"UnFollow by profile_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"profile_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (Not followed, profile not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Followers/{profile_id}/Followers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Followers\"\r\n        ],\r\n        \"summary\": \"Get followers by profile id with pagination\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"profile_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"Page\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found problems (profile not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Followers/{profile_id}/Followings\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Followers\"\r\n        ],\r\n        \"summary\": \"Get followings by profile id with pagination\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"profile_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"Page\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found problems (profile not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Likes/Post/{post_id}/Like\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Likes\"\r\n        ],\r\n        \"summary\": \"Like post by post_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (Already liked, post not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Likes/Post/{post_id}/Unlike\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Likes\"\r\n        ],\r\n        \"summary\": \"UnLike post by post_id and identity token\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (Not liked, post not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Likes/Post/{post_id}/Likers\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Likes\"\r\n        ],\r\n        \"summary\": \"Get likers of post by post_id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"Page\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Any user problems with request (Not liked, post not found, etc...)\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Posts/{post_id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Posts\"\r\n        ],\r\n        \"summary\": \"Get full post by post_id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"No problem\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Post not found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Posts\"\r\n        ],\r\n        \"summary\": \"Delete post by post_id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Post deleted\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Unauthorized request (User is not owner of requested post)\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Post with id post_id not found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      },\r\n      \"patch\": {\r\n        \"tags\": [\r\n          \"Posts\"\r\n        ],\r\n        \"summary\": \"Edit post by post_id\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"post_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"Title\": {\r\n                    \"type\": \"string\"\r\n                  }\r\n                }\r\n              },\r\n              \"encoding\": {\r\n                \"Title\": {\r\n                  \"style\": \"form\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Post edited\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Unauthorized request (User is not owner of requested post)\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Post with id post_id not found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Posts/GetByProfile/{profile_id}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Posts\"\r\n        ],\r\n        \"summary\": \"Get reduced posts by profile_id with pagination\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"profile_id\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"Page\",\r\n            \"in\": \"query\",\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"No problem\"\r\n          },\r\n          \"401\": {\r\n            \"description\": \"Unauthenticated request (Wrong, Missing or Expired token)\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Post not found\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Posts\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Posts\"\r\n        ],\r\n        \"summary\": \"Create post by identity token\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"multipart/form-data\": {\r\n              \"schema\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                  \"Title\": {\r\n                    \"type\": \"string\"\r\n                  },\r\n                  \"Images\": {\r\n                    \"type\": \"array\",\r\n                    \"items\": {\r\n                      \"type\": \"string\",\r\n                      \"format\": \"binary\"\r\n                    }\r\n                  }\r\n                }\r\n              },\r\n              \"encoding\": {\r\n                \"Title\": {\r\n                  \"style\": \"form\"\r\n                },\r\n                \"Images\": {\r\n                  \"style\": \"form\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Post created\"\r\n          },\r\n          \"409\": {\r\n            \"description\": \"Post create failed by user. No return\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Profiles/{profile_nickname}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Profiles\"\r\n        ],\r\n        \"summary\": \"Get profile by profile_nickname\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"profile_nickname\",\r\n            \"in\": \"path\",\r\n            \"description\": \"\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Any server problem. Until release returns Exception text\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"securitySchemes\": {\r\n      \"Bearer\": {\r\n        \"type\": \"apiKey\",\r\n        \"description\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJVc2VyIiwicHJvZmlsZV9pZCI6IjIiLCJleHAiOjE2NzM4NjQxMDYsImlzcyI6Imh0dHBzOi8vbG9jYWxob3N0Ojg4ODgiLCJhdWQiOiJ1c2VyIn0.8u3WOI0WVQkJZtwiiFG-STOqmVdjVEfKsqxDAelPei4\",\r\n        \"name\": \"Authorization\",\r\n        \"in\": \"header\"\r\n      }\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"Bearer\": []\r\n    }\r\n  ]\r\n}",
      "url": "https://localhost:4444/swagger/v1/swagger.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToTypeScriptClient": {
      "className": "{controller}ApiClient",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 4.3,
      "template": "Fetch",
      "promiseType": "Promise",
      "httpClass": "HttpClient",
      "withCredentials": true,
      "useSingletonProvider": false,
      "injectionTokenType": "InjectionToken",
      "rxJsVersion": 6.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": false,
      "exportTypes": true,
      "wrapDtoExceptions": false,
      "exceptionClass": "ApiException",
      "clientBaseClass": null,
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "protectedMethods": [],
      "configurationClass": null,
      "useTransformOptionsMethod": false,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromFirstTagAndPathSegments",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Interface",
      "enumStyle": "Enum",
      "useLeafType": false,
      "classTypes": [],
      "extendedClasses": [],
      "extensionCode": null,
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateTypeCheckFunctions": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "AMICA_API_BASE_URL",
      "queryNullValue": "",
      "useAbortSignal": false,
      "inlineNamedDictionaries": false,
      "inlineNamedAny": false,
      "includeHttpContext": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": [
        "https"
      ],
      "output": null,
      "newLineBehavior": "Auto"
    }
  }
}